/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type GetCreateChartOfAccountsModelRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Unique identifier for a connection.
   */
  connectionId: string;
};

export type GetCreateChartOfAccountsModelResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * Your API request was not properly authorized.
   */
  errorMessage?: shared.ErrorMessage | undefined;
  /**
   * OK
   */
  pushOption?: shared.PushOption | undefined;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const GetCreateChartOfAccountsModelRequest$inboundSchema: z.ZodType<
  GetCreateChartOfAccountsModelRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
});

/** @internal */
export type GetCreateChartOfAccountsModelRequest$Outbound = {
  companyId: string;
  connectionId: string;
};

/** @internal */
export const GetCreateChartOfAccountsModelRequest$outboundSchema: z.ZodType<
  GetCreateChartOfAccountsModelRequest$Outbound,
  z.ZodTypeDef,
  GetCreateChartOfAccountsModelRequest
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCreateChartOfAccountsModelRequest$ {
  /** @deprecated use `GetCreateChartOfAccountsModelRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetCreateChartOfAccountsModelRequest$inboundSchema;
  /** @deprecated use `GetCreateChartOfAccountsModelRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetCreateChartOfAccountsModelRequest$outboundSchema;
  /** @deprecated use `GetCreateChartOfAccountsModelRequest$Outbound` instead. */
  export type Outbound = GetCreateChartOfAccountsModelRequest$Outbound;
}

export function getCreateChartOfAccountsModelRequestToJSON(
  getCreateChartOfAccountsModelRequest: GetCreateChartOfAccountsModelRequest,
): string {
  return JSON.stringify(
    GetCreateChartOfAccountsModelRequest$outboundSchema.parse(
      getCreateChartOfAccountsModelRequest,
    ),
  );
}

export function getCreateChartOfAccountsModelRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetCreateChartOfAccountsModelRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetCreateChartOfAccountsModelRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCreateChartOfAccountsModelRequest' from JSON`,
  );
}

/** @internal */
export const GetCreateChartOfAccountsModelResponse$inboundSchema: z.ZodType<
  GetCreateChartOfAccountsModelResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  ErrorMessage: shared.ErrorMessage$inboundSchema.optional(),
  PushOption: shared.PushOption$inboundSchema.optional(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "ErrorMessage": "errorMessage",
    "PushOption": "pushOption",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type GetCreateChartOfAccountsModelResponse$Outbound = {
  ContentType: string;
  ErrorMessage?: shared.ErrorMessage$Outbound | undefined;
  PushOption?: shared.PushOption$Outbound | undefined;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const GetCreateChartOfAccountsModelResponse$outboundSchema: z.ZodType<
  GetCreateChartOfAccountsModelResponse$Outbound,
  z.ZodTypeDef,
  GetCreateChartOfAccountsModelResponse
> = z.object({
  contentType: z.string(),
  errorMessage: shared.ErrorMessage$outboundSchema.optional(),
  pushOption: shared.PushOption$outboundSchema.optional(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    errorMessage: "ErrorMessage",
    pushOption: "PushOption",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCreateChartOfAccountsModelResponse$ {
  /** @deprecated use `GetCreateChartOfAccountsModelResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetCreateChartOfAccountsModelResponse$inboundSchema;
  /** @deprecated use `GetCreateChartOfAccountsModelResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetCreateChartOfAccountsModelResponse$outboundSchema;
  /** @deprecated use `GetCreateChartOfAccountsModelResponse$Outbound` instead. */
  export type Outbound = GetCreateChartOfAccountsModelResponse$Outbound;
}

export function getCreateChartOfAccountsModelResponseToJSON(
  getCreateChartOfAccountsModelResponse: GetCreateChartOfAccountsModelResponse,
): string {
  return JSON.stringify(
    GetCreateChartOfAccountsModelResponse$outboundSchema.parse(
      getCreateChartOfAccountsModelResponse,
    ),
  );
}

export function getCreateChartOfAccountsModelResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetCreateChartOfAccountsModelResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetCreateChartOfAccountsModelResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCreateChartOfAccountsModelResponse' from JSON`,
  );
}
